// Code generated by sqlc. DO NOT EDIT.
// source: users.sql

package db

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :execresult
INSERT INTO users (
    email,
    gender,
    age,
    country
) VALUES (
    $1, $2, $3, $4
)
`

func (q *Queries) CreateUser(ctx context.Context) (sql.Result, error) {
	return q.db.ExecContext(ctx, createUser)
}

const deleteUser = `-- name: DeleteUser :exec
DELETE FROM users
WHERE email = $1
`

func (q *Queries) DeleteUser(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteUser)
	return err
}

const getUser = `-- name: GetUser :one
SELECT email, gender, age, country, created_at FROM users
WHERE email = $1 LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser)
	var i User
	err := row.Scan(
		&i.Email,
		&i.Gender,
		&i.Age,
		&i.Country,
		&i.CreatedAt,
	)
	return i, err
}
